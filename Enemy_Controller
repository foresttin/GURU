using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Enemy_Controller : MonoBehaviour
{
    public float for_speed = 10;
    public float side_Speed = 7;

    public Transform center_pos;
    public Transform left_pos;
    public Transform right_pos;

    private int current_pos;
    private float elapsedTime;
    private float changeInterval = 5f; // 위치를 변경할 간격 (5초)

    public Slider hpbar;

    public float maxHp = 100;
    public float curHp = 100;

    public GameObject gameLabel;
    Text gameText;

    private player_Controller pc;

    Animator anim;

    public GameObject Player; // Player 오브젝트를 참조합니다.
    private Animator PlayerAnimator; // Player의 Animator를 참조합니다.

 

    // Start is called before the first frame update
    void Start()
    {
        current_pos = 0;
        elapsedTime = 0f;
        Physics.IgnoreLayerCollision(6, 7);
        Physics.IgnoreLayerCollision(7, 8);
        Physics.IgnoreLayerCollision(7, 9);

        hpbar.value = (float)curHp / (float)maxHp;

        gameText = gameLabel.GetComponent<Text>();
        gameLabel.SetActive(false);

        anim = transform.GetComponentInChildren<Animator>();
        PlayerAnimator = Player.GetComponent<Animator>();
    }

    // Update is called once per frame
    void Update()
    {
        pc = FindObjectOfType<player_Controller>();

        transform.position = new Vector3(transform.position.x, transform.position.y, transform.position.z + for_speed * Time.deltaTime);

        if (current_pos == 0)
        {
            transform.position = Vector3.Lerp(transform.position, new Vector3(center_pos.position.x, transform.position.y, transform.position.z), side_Speed * Time.deltaTime);
        }
        else if (current_pos == 1)
        {
            transform.position = Vector3.Lerp(transform.position, new Vector3(left_pos.position.x, transform.position.y, transform.position.z), side_Speed * Time.deltaTime);
        }
        else if (current_pos == 2)
        {
            transform.position = Vector3.Lerp(transform.position, new Vector3(right_pos.position.x, transform.position.y, transform.position.z), side_Speed * Time.deltaTime);
        }

        // 경과 시간 누적
        elapsedTime += Time.deltaTime;

        // 일정 시간마다 위치 변경
        if (elapsedTime >= changeInterval)
        {
            current_pos = Random.Range(0, 3); // 0, 1, 2 중 하나의 숫자를 무작위로 선택
            elapsedTime = 0f; // 경과 시간 초기화
        }

        if(curHp <= 0)
        {
            pc.EndGame.SetActive(true);
            transform.position = new Vector3(transform.position.x, transform.position.y, transform.position.z);

            gameLabel.SetActive(true);
            gameText.text = ("Game Clear");
            gameText.color = new Color32(0, 255, 0, 255);

            for_speed = 0;
            side_Speed = 0;
            anim.SetTrigger("Enemy_Die");

            PlayerAnimator.SetTrigger("Player_Win");
            pc.for_speed = 0;
            pc.side_Speed = 0;
        }
    }

    public void HandleHp()
    {
        hpbar.value = (float)curHp / (float)maxHp;
    }
}
